jQuery(function(a){let o={page:1,order:"DESC",loading:!1,perPage:henryProject.perPage||10},s=a("#entries-list"),i=a("#pagination"),r=a("#entry-form");var e=a("#sort-toggle");function l(){o.loading||(o.loading=!0,s.addClass("loading"),a.ajax({url:henryProject.ajaxUrl,type:"GET",data:{action:"henry_project_get_entries",nonce:henryProject.nonce,page:o.page,order:o.order},success:function(e){if(e.success){(r=e.data.entries).length?(s.html(r.map(e=>`
            <div class="henry-project-entry" data-entry-id="${e.id}">
                <div class="d-flex justify-content-between align-items-start">
                    <div class="entry-content ${e.can_edit?"editable":""}"
                         ${e.can_edit?'contenteditable="true"':""}>
                        ${g(e.content)}
                    </div>
                    ${e.can_edit?`
                        <div class="henry-project-actions ms-3">
                            <button class="btn btn-sm btn-outline-danger delete-entry"
                                    title="Delete Entry">
                                <i class="bi bi-trash"></i>
                            </button>
                        </div>
                    `:""}
                </div>
                <div class="entry-meta d-flex justify-content-between align-items-center mt-2">
                    <small class="text-muted">
                        By ${g(e.author.name)}
                        <span class="badge bg-secondary ms-1">${e.author.roles.join(", ")}</span>
                    </small>
                    <small class="text-muted">
                        ${new Date(e.date).toLocaleDateString()}
                    </small>
                </div>
            </div>
        `).join("")),a(".entry-content.editable").on("blur",c).on("keydown",function(e){"Enter"===e.key&&(e.preventDefault(),a(this).blur())}),a(".delete-entry").on("click",d)):s.html(`
                <div class="alert alert-info">
                    No entries available for your role level.
                </div>
            `);var t=e.data.total_pages;if(t<=1)i.empty();else{var n=[];for(let e=1;e<=t;e++)n.push(`
                <li class="page-item ${e===o.page?"active":""}">
                    <button class="page-link" data-page="${e}">${e}</button>
                </li>
            `);i.html(`
            <nav aria-label="Entries pagination">
                <ul class="pagination justify-content-center">
                    ${n.join("")}
                </ul>
            </nav>
        `),i.find(".page-link").on("click",function(){o.page=parseInt(a(this).data("page")),l()})}}else u(e.data.message||"Error loading entries");var r},error:function(e,t,n){u("Error loading entries: "+n)},complete:function(){o.loading=!1,s.removeClass("loading")}}))}function c(e){var e=a(e.target),t=e.text().trim(),e=e.closest("[data-entry-id]").data("entryId");t?a.ajax({url:henryProject.ajaxUrl,type:"POST",data:{action:"henry_project_update_entry",nonce:henryProject.nonce,id:e,content:t},success:function(e){e.success?y("Entry updated successfully"):(u(e.data.message||"Error updating entry"),l())},error:function(e,t,n){u("Error updating entry: "+n),l()}}):l()}function d(e){if(confirm("Are you sure you want to delete this entry?")){let r=a(e.target).closest("[data-entry-id]");e=r.data("entryId");r.addClass("deleting"),a.ajax({url:henryProject.ajaxUrl,type:"POST",data:{action:"henry_project_delete_entry",nonce:henryProject.nonce,id:e},success:function(e){e.success?(l(),y("Entry deleted successfully")):(u(e.data.message||"Error deleting entry"),r.removeClass("deleting"))},error:function(e,t,n){u("Error deleting entry: "+n),r.removeClass("deleting")}})}}function u(e){t(e,"danger")}function y(e){t(e,"success")}function t(e,t){a(".alert").remove();let n=a(`
            <div class="alert alert-${t} alert-dismissible fade show" role="alert">
                ${e}
                <button type="button" class="btn-close" onclick="this.parentElement.remove()" aria-label="Close">Ã—</button>
            </div>
        `);s.before(n),setTimeout(()=>{n.length&&n.remove()},3e3)}function g(e){return a("<div>").text(e).html()}r.on("submit",function(e){e.preventDefault();let t=a("#entry-content"),n=(e=t.val().trim(),r.find('[type="submit"]'));e&&(n.prop("disabled",!0),a.ajax({url:henryProject.ajaxUrl,type:"POST",data:{action:"henry_project_create_entry",nonce:henryProject.nonce,content:e},success:function(e){e.success?(t.val(""),o.page=1,l(),y("Entry added successfully")):u(e.data.message||"Error adding entry")},error:function(e,t,n){u("Error adding entry: "+n)},complete:function(){n.prop("disabled",!1)}}))}),e.on("click",function(){o.order="DESC"===o.order?"ASC":"DESC",a(this).find("i").toggleClass("bi-sort-down bi-sort-up"),a(this).attr("title","Sort "+("DESC"===o.order?"Oldest First":"Newest First")),l()}),e.attr("title","Sort Newest First"),l()});